package main

type HeckParser Peg {
  Heck
}

e <- sp e1 !.

e1 <- e2 ( add   e2 { p.AddOp(Add) }
         / minus e2 { p.AddOp(Sub) }
         )*
e2 <- e3 ( mult e3 { p.AddOp(Mult) }
         / div  e3 { p.AddOp(Div) }
         / mod  e3 { p.AddOp(Mod) }
         )*

e3 <- minus value { p.AddOp(Neg) }
    / tilde value { p.AddOp(Tilde) }
    / value

value <- <[[0-9a-f]]+> sp { p.AddValue(buffer[begin:end]) }
       / '(' sp e1 sp ')' sp

add <- '+' sp
minus <- '-' sp
tilde <- '~' sp
mult <- '*' sp
div <- '/' sp
mod <- '%' sp

sp <- ( ' ' / '\t' )*
